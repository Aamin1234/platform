#!/bin/bash

which php >/dev/null 2>&1
if [ $? -eq 0 ]; then
	php -r 'exit((int) version_compare(PHP_VERSION, "5.4", "<"));' >/dev/null 2>&1
	if [ $? -gt 0 ]; then
		echo "!!! Ushahidi Platform requires PHP 5.4 or newer, please upgrade!"
		exit 1
	fi
fi

# Defaults
production=false
withgit=false
# Parse options
# Based on code from http://mywiki.wooledge.org/ComplexOptionParsing
optspec=":h-:"
while getopts "$optspec" opt; do
while true; do
	case "${opt}" in
		-) #OPTARG is name-of-long-option or name-of-long-option=value
			if [[ "${OPTARG}" =~ .*=.* ]] #with this --key=value format only one argument is possible
			then
				opt=${OPTARG/=*/}
				OPTARG=${OPTARG#*=}
			else #with this --key value1 value2 format multiple arguments are possible
				opt="$OPTARG"
			fi
			continue #now that opt/OPTARG are set we can process them as if getopts would've given us long options
			;;
		git-update)
			withgit=true
				;;
		production)
			production=true
				;;
		h|help)
			echo "usage: $0 [--git-update] [--production]" >&2
			exit 2
			;;
	esac
break; done
done

# Deployment mode, disable all developer dependencies :)
if [ -n "$1" -a "$1" == "deploy" ]; then
	production=true
fi

if [ "$withgit" = true ]; then
	echo ">>> Pulling source code"
	git pull
else
	echo ">>> Skipping git"
fi

composer="composer"
bower="./node_modules/.bin/bower"
npm="npm"
bundle="bundle"
migrate="$(dirname "$0")/phinx"
upgrade=1

# Check required commands are available
which $composer >/dev/null 2>&1
if [ $? -gt 0 ]; then
	composer="./composer.phar"
	if [ ! -f $composer ]; then
		echo "!!! Missing the 'composer' command, please install it: https://getcomposer.org/"
		exit 1
	fi
fi

which $npm >/dev/null 2>&1
if [ $? -gt 0 ]; then
	echo "!!! Missing the 'npm' command, please install it: https://www.npmjs.org/"
	exit 1
fi

which $bundle >/dev/null 2>&1
if [ $? -gt 0 ]; then
	echo "!!! Missing the 'bundle' command, please install it: https://www.bundler.io/"
	exit 1
fi

if [ -n "$" -a "$1" == "migrate" ]; then
	upgrade=0
fi

# Deployment mode, disable all developer dependencies :)
if [ "$production" = true ]; then
	echo ">>> Skipping dev dependencies"
	composer="$composer --no-dev"
	npm="$npm --production"
fi

# Make npm run quietly
npm="$npm --quiet"

if [ $upgrade -gt 0 ]; then
	echo ">>> Updating server dependencies"
	$composer install

	echo ">>> Updating client side build tools"
	[ -d node_modules ] && $npm install || $npm update
	[ "$production" = false ] && $bundle install

	# Check for bower *after* npm installs it
	if [ ! -f $bower ]; then
		bower="bower"
		which $bower >/dev/null 2>&1
		if [ $? -gt 0 ]; then
			echo "!!! Missing the 'bower' command, please install it: http://bower.io/"
			exit 1
		else
			echo ">>> The 'bower' command was not installed by npm, falling back to globally installed bower"
		fi
	fi

	[ "$production" = true ] && bower="$bower --production"

	echo ">>> Updating client dependencies"
	[ -d web/media/bower_components ] && $bower update || $bower install
fi

if [ -f "$migrate" ]; then
	echo ">>> Running migrations"
	$migrate migrate -c application/phinx.php
else
	echo "!!! Migration tool $migrate not installed, unable to run migrations"
fi
